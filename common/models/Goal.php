<?php

namespace common\models;

use common\models\ImageUpload;
use common\models\Category;
use Yii;

/**
 * This is the model class for table "goal".
 *
 * @property int $id
 * @property string $title
 * @property string $image
 * @property int $category_id
 * @property string $date
 * @property int $is_done
 */
class Goal extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'goal';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'price'], 'required'],
            [['category_id', 'is_done'], 'integer'],
            [['date'], 'safe'],
            [['title', 'image'], 'string', 'max' => 255],
            [['date'], 'date', 'format'=>'php:Y-m-d'],
            [['date'], 'default', 'value'=> date('Y-m-d')],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'image' => 'Image',
            'category_id' => 'Category ID',
            'date' => 'Date',
            'price' => 'Price',
            'is_done' => 'Is Done',
        ];
    }


    public function saveImage($filename){
        $this->image = $filename;
        return $this->save(false);
    }

    public function getImage(){
        return ($this->image) ? Yii::getAlias('@app/uploads/') . $this->image : Yii::getAlias('@app/uploads/no-image.png');
    }

    public function getFrontendImage(){
        return ($this->image) ? Yii::getAlias('/projects/mon_con/common/web/uploads/') . $this->image : Yii::getAlias('@web/uploads/no-image.png');
    }

    public function deleteImage(){
        $imageUploadModel = new ImageUpload();
        $imageUploadModel->deleteCurrentImage($this->image);
    }

    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function getCategory(){
        return $this->hasOne(Category::className(), ['id' => 'category_id']);
    }

    public function saveCategory($category_id)
    {
        $category = Category::findOne($category_id);
        if($category != null)
        {
            $this->link('category', $category);
            return true;
        }
    }

    public function getDate(){
        return Yii::$app->formatter->asDate($this->date);
    }
}
